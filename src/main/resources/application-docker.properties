# Docker-specific configuration
spring.application.name=issue-reporting

# Database Configuration for Docker (FIXED: using root with empty password)
spring.datasource.url=jdbc:mysql://mysql:3306/fsdproject
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration for Spring Boot 3.x
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Server Configuration
server.port=8081

# Static resource locations (for serving uploaded images)
spring.web.resources.static-locations=classpath:/static/,file:/app/uploads/

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB
spring.servlet.multipart.enabled=true

# JWT Configuration (use environment variables)
jwt.secret=${JWT_SECRET:mySecretKey123456789012345678901234567890}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:http://localhost:3000}

# Actuator for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Logging Configuration (reduced for Docker)
logging.level.com.community.issuereporting=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.root=INFO
logging.file.name=/app/logs/application.log